{"version":3,"sources":["App.js","serviceWorker.js","index.js","pipe_front.svg"],"names":["App","commonFlowOptions","particles","number","value","density","enable","color","shape","type","stroke","width","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","repulse","distance","duration","retina_detect","sideFlow","centerFlow","flowStyle","position","height","top","left","right","bottom","backgroundColor","react_default","a","createElement","react","className","particles_default","params","Object","objectSpread","this","style","src","pipeFront","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9b47def4.chunk.js","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport Particles from \"react-particles-js\";\nimport pipeFront from \"./pipe_front.svg\";\nimport \"./index.css\";\n\nclass App extends Component {\n\n  commonFlowOptions = {\n    particles: {\n      \"number\": {\n        \"value\": 80,\n        \"density\": {\n          \"enable\": false,\n        }\n      },\n      \"color\": {\n        \"value\": \"#aaa\"\n      },\n      \"shape\": {\n        \"type\": \"circle\",\n        \"stroke\": {\n          \"width\": 0,\n          \"color\": \"#000000\"\n        },\n      },\n      \"opacity\": {\n        \"value\": 1,\n        \"random\": false,\n        \"anim\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"opacity_min\": 0.1,\n          \"sync\": false\n        }\n      },\n      \"size\": {\n        \"value\": 3.5,\n        \"random\": true,\n        \"anim\": {\n          \"enable\": false,\n          \"speed\": 17,\n          \"size_min\": 0.8,\n          \"sync\": true\n        }\n      },\n      line_linked: {\n        \"enable\": false,\n      },\n      \"move\": {\n        \"enable\": true,\n        \"speed\": 20,\n        \"direction\": \"left\",\n        \"random\": true,\n        \"straight\": false,\n        \"out_mode\": \"out\",\n        \"bounce\": false,\n        \"attract\": {\n          \"enable\": true,\n          \"rotateX\": 4000,\n          \"rotateY\": 315\n        }\n      },\n    },\n    \"interactivity\": {\n      \"detect_on\": \"canvas\",\n      \"events\": {\n        \"onhover\": {\n          \"enable\": true,\n          \"mode\": \"repulse\"\n        },\n        \"onclick\": {\n          \"enable\": true,\n          \"mode\": \"repulse\"\n        },\n        \"resize\": true\n      },\n      \"modes\": {\n        \"repulse\": {\n          \"distance\": 55,\n          \"duration\": 1.4\n        },\n      }\n    },\n    \"retina_detect\": false\n  };\n\n  sideFlow = {\n    particles: {\n      \"number\": {\n        \"value\": 120,\n        \"density\": {\n          \"enable\": false,\n        }\n      },\n      \"color\": {\n        \"value\": \"#aaaaff\"\n      },\n      line_linked: {\n        \"enable\": true,\n        \"distance\": 40,\n        \"color\": \"#99a\",\n        \"opacity\": 1,\n        \"width\": 1,\n      },\n      \"move\": {\n        \"enable\": true,\n        \"speed\": 12.5,\n        \"direction\": \"left\",\n        \"random\": true,\n        \"straight\": false,\n        \"out_mode\": \"out\",\n        \"bounce\": false,\n        \"attract\": {\n          \"enable\": true,\n          \"rotateX\": 4000,\n          \"rotateY\": 315\n        }\n      }\n    }\n  };\n\n  centerFlow = {\n    particles: {\n      \"number\": {\n        \"value\": 280,\n        \"density\": {\n          \"enable\": false,\n        }\n      },\n      \"color\": {\n        \"value\": \"#aaaaff\"\n    },\n      line_linked: {\n        \"enable\": true,\n        \"distance\": 55,\n        \"color\": \"#99a\",\n        \"opacity\": 1,\n        \"width\": 1,\n      },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 22.25,\n      \"direction\": \"left\",\n      \"random\": true,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": true,\n        \"rotateX\": 4000,\n        \"rotateY\": 315\n      }\n    }\n    }\n  };\n\n  flowStyle = {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: `rgba(20,0,30,0.125)`\n  };\n\n  render() {\n\n    return (\n      <Fragment>\n        <div className=\"pipe\">\n          <div className=\"main-flow\">\n            <Particles\n              params={{...this.commonFlowOptions}}\n              style={{...this.flowStyle}}\n            />\n          </div>\n          <div className=\"center-flow side-flow1\">\n            <Particles\n              params={{...this.commonFlowOptions, ...this.sideFlow}}\n              style={this.flowStyle}\n            />\n          </div>\n          <div className=\"center-flow side-flow2\">\n            <Particles\n              params={{...this.commonFlowOptions, ...this.sideFlow}}\n              style={this.flowStyle}\n            />\n          </div>\n          <div className=\"center-flow\">\n            <Particles\n              params={{...this.commonFlowOptions, ...this.centerFlow}}\n              style={this.flowStyle}\n            />\n          </div>\n          <img src={pipeFront} className=\"pipe-front\"/>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pipe_front.476087bf.svg\";"],"sourceRoot":""}